{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/epi2me-labs/wf-metagenomics/master/nextflow_schema.json",
    "title": "epi2me-labs/wf-metagenomics",
    "description": "Identification of the origin of single reads from both amplicon-targeted and shotgun metagenomics sequencing.",
    "demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/wf-metagenomics-demo.tar.gz",
    "aws_demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/wf-metagenomics-demo/aws.nextflow.config",
    "url": "https://github.com/epi2me-labs/wf-metagenomics",
    "type": "object",
    "definitions": {
        "input_options": {
            "title": "Input Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "fastq": {
                    "type": "string",
                    "format": "path",
                    "description": "A fastq file or a directory of directories containing fastq input files.",
                    "help_text": "If using the kraken2 classifier type, the input must be either a single file or a directory containing sub-directories which themselves contain sequencing reads in fastq files. See Readme for an example.\n\nIf using the minimap2 classifier type - directories named \\\"barcode*\\\" are found under the `--fastq` directory the data is assumed to be multiplex and each barcode directory will be processed independently. If `.fastq(.gz)` files are found under the `--fastq` directory the sample is assumed to not be multiplexed. In this second case `--samples` should be a simple name rather than a CSV file.",
                    "demo_data": "test_data"
                },
                "classifier": {
                    "type": "string",
                    "default": "mapping",
                    "description": "Kraken2 or Minimap2 workflow to be used for classification of reads.",
                    "enum": [
                        "kraken2",
                        "mapping"
                    ],
                    "help_text": "Use kraken2 for fast classification and minimap2 for more finer resolution, see Readme for further info."
                },
                "batch_size": {
                    "type": "integer",
                    "default": 0,
                    "description": "Maximum number of sequence records to process in a batch.",
                    "help_text": "Large files will be split such that batch_size records are processed together. Set to 0 to avoid rebatching input files. A value of 32000 is recommended to rebatch large files."
                },
                "analyse_unclassified": {
                    "type": "boolean",
                    "description": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.",
                    "help_text": "If selected and if the input is a multiplex directory the workflow will also process the unclassified directory."
                }
            },
            "required": [
                "fastq"
            ]
        },
        "real_time_analysis_options": {
            "title": "Real Time Analysis Options",
            "type": "object",
            "description": "Options relating to the default real-time Kraken2 workflow.",
            "default": "",
            "properties": {
                "watch_path": {
                    "type": "boolean",
                    "description": "Enable to continuously watch the input directory for new input files. Reads will be analysed as they appear",
                    "help_text": "This option enables the use of Nextflowâ€™s directory watching feature to constantly monitor input directories for new files. As soon as files are written by an external process Nextflow will begin analysing these files. The workflow will accumulate data over time to produce an updating report."
                },
                "read_limit": {
                    "type": "integer",
                    "description": "Stop processing data when a particular number of reads have been analysed. By default the workflow will run indefinitely.",
                    "help_text": "Sets the upper bound on the number of reads that will be analysed before the workflow is automatically stopped and no more data is analysed."
                }
            }
        },
        "sample_options": {
            "title": "Sample Options",
            "type": "object",
            "default": "",
            "properties": {
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A CSV file used to map barcodes to sample aliases. The sample sheet can be provided when the input data is a directory containing sub-directories with FASTQ files. Used only with the minimap2 classifier.",
                    "help_text": "The sample sheet is a CSV file with, minimally, columns named `barcode` , `sample_id`,  `alias`. Extra columns are allowed. A `type` column is required for certain workflows and should have the following values; `test_sample`, `positive_control`, `negative_control`, `no_template_control`."
                },
                "sample": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files."
                }
            },
            "description": "Parameters that relate to samples such as sample sheets and sample names."
        },
        "reference_options": {
            "title": "Reference Options",
            "type": "object",
            "description": "Files will be downloaded as part of the first run of workflow and automatically stored for subsequent runs.",
            "default": "",
            "properties": {
                "database_set": {
                    "type": "string",
                    "default": "ncbi_16s_18s",
                    "description": "Sets the reference, databases and taxonomy datasets that will be used for classifying reads. Choices: ['ncbi_16s_18s','ncbi_16s_18s_28s_ITS','PlusPF-8']. Workflow will require memory available to be slightly higher than the size of the database. PlusPF-8 database requires more than 8Gb.",
                    "enum": [
                        "ncbi_16s_18s",
                        "ncbi_16s_18s_28s_ITS",
                        "PlusPF-8",
                        "PlusPFP-8"
                    ],
                    "help_text": "This setting is overridable by providing an explicit taxonomy, database or reference path in the other reference options"
                },
                "database": {
                    "type": "string",
                    "format": "path",
                    "description": "Not required but can be used to specifically override kraken2 database [.tar.gz or Directory].",
                    "help_text": "By default uses database chosen in database_set parameter"
                },
                "taxonomy": {
                    "type": "string",
                    "format": "path",
                    "description": "Not required but can be used to specifically override taxonomy database. Change the default to use a different taxonomy file  [.tar.gz or directory].",
                    "help_text": "By default NCBI taxonomy file will be downloaded and used"
                },
                "store_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Where to store initial download of database.",
                    "default": "store_dir",
                    "help_text": "database set selected will be downloaded as part of the workflow and saved in this location, on subsequent runs it will use this as the database. "
                },
                "reference": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Override the FASTA reference file selected by the database_set parameter. It can be a FASTA format reference sequence collection or a minimap2 MMI format index.",
                    "help_text": "This option should be used in conjunction with the database parameter to specify a custom database"
                },
                "database_sets": {
                    "type": "object",
                    "hidden": true,
                    "description": "A map containing the available sources and their default resource paths"
                }
            }
        },
        "kraken2_options": {
            "title": "Kraken2 Options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "help_text": "\nKraken2\nIt is possible to enable classification by kraken2, \nand disable alignment which is a faster but coarser method of \nclassification reliant on the presence of a kraken2 database.\n",
            "properties": {
                "bracken_dist": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Specifically override bracken kmer dist file",
                    "help_text": "A default kmer_dist is provided in database_set selected. Which was generated from the kraken database.",
                    "hidden": true
                },
                "bracken_length": {
                    "type": "integer",
                    "description": "Set the length value bracken will use",
                    "minimum": 1,
                    "help_text": "Should be set to the length used to generate the kmer distribution file supplied in the kraken database input directory. For the default datasets these will be set automatically. ncbi_16s_18s = 10000 , ncbi_16s_18s_28s_ITS = 1000 , PlusPF-8 = 300",
                    "hidden": true
                },
                "bracken_level": {
                    "type": "string",
                    "default": "S",
                    "description": "Set the level that bracken will estimate abundance at. Default: S (species). Other possible options are K (kingdom level), P (phylum), C (class), O (order), F (family), and G (genus).",
                    "enum": [
                        "S",
                        "G",
                        "k",
                        "F",
                        "O",
                        "C",
                        "P"
                    ],
                    "hidden": true
                },
                "port": {
                    "type": "integer",
                    "description": "Network port for communication between kraken2 server and clients",
                    "default": 8080,
                    "help_text": "The workflow uses a server process to handle kraken2 classification requests. This allows the workflow to persist the sequence database in memory throughout the duration of processing. The option specifies the local network port on which the server and clients will communicate.",
                    "hidden": true
                },
                "host": {
                    "type": "string",
                    "description": "Network hostname (or IP address) for communication between kraken2 server and clients. (See also 'external_kraken2' parameter).",
                    "default": "localhost",
                    "help_text": "The workflow uses a server process to handle kraken2 classification requests. This allows the workflow to persist the sequence database in memory throughout the duration of processing. The option specifies the local network hostname (or IP address) of the kraken server.",
                    "hidden": true
                },
                "external_kraken2": {
                    "type": "boolean",
                    "description": "Whether a pre-existing kraken2 server should be used, rather than creating one as part of the workflow",
                    "help_text": "By default the workflow assumes that it is running on a single host computer, and further that it should start its own kraken2 server. It may be desirable to start a kraken2 server outside of the workflow, in which case this option should be enabled. This option may be used in conjuction with the `host` option to specify that the kraken2 server is running on a remote computer. ",
                    "hidden": true
                }
            },
            "description": "Kraken2 classification options. Only relevant if classifier parameter is set to kraken2"
        },
        "minimap2_based_options": {
            "title": "Minimap2 Based Options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "properties": {
                "skip_minimap2": {
                    "type": "boolean",
                    "description": "Skip Minimap2"
                },
                "skip_emu": {
                    "type": "boolean",
                    "description": "Skip EMU",
                    "default": false
                },
                "minimap2filter": {
                    "type": "string",
                    "description": "Filter output of minimap2 by taxids inc. child nodes, E.g. \"9606,1404\"",
                    "help_text": "Provide a list of taxids if you are only interested in certain ones in your minimap2 analysis outputs."
                },
                "minimap2exclude": {
                    "type": "boolean",
                    "description": "Invert minimap2filter and exclude the given taxids instead",
                    "help_text": "Provide a list of taxids that you want to exclude from analysis outputs."
                },
                "ref2taxid": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Not required but can be used to specify a  ref2taxid mapping. Format is .tsv (refname  taxid), no header row.",
                    "help_text": "By default uses ref2taxid for option chosen in database_set parameter"
                },
                "split_prefix": {
                    "type": "boolean",
                    "description": "Enable if using a very large reference with minimap2",
                    "help_text": "If reference fasta large enough to require multipart index, set to true to use split-prefix option with minimap2. "
                },
                "custom_db": {
                    "type": "boolean",
                    "description": "Path to custom Minimap2 database",
                    "help_text": "Select this option if you want to use a custom DB for minimap2 instead of the 16S NCBI provided by Epi2Me. It's a fasta file with the sequence header format: taxid|lineage"
                },
                "emu_db": {
                    "type": "string",
                    "description": "Path to EMU database"
                }
            },
            "description": "Minimap2 classification options. Only relevant if classifier parameter is set to minimap2.",
            "help_text": "Minimap2\nThe default strategy is using minimap2 to perform full\nalignments against .fasta formatted references sequences. "
        },
        "output_options": {
            "title": "Output Options",
            "type": "object",
            "description": "Parameters for saving and naming workflow outputs.",
            "default": "",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "default": "output",
                    "description": "Directory for output of all user-facing files."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced Options",
            "type": "object",
            "description": "Advanced options for configuring processes inside the workflow.",
            "default": "",
            "properties": {
                "min_len": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify read length lower limit",
                    "help_text": "Any reads shorter than this limit will not be included in the analysis."
                },
                "min_read_qual": {
                    "type": "number",
                    "description": "Minimum read quality.",
                    "help_text": "Any reads with a quality lower than this limit will not be included in the analysis."
                },
                "max_len": {
                    "type": "integer",
                    "description": "Specify read length upper limit",
                    "help_text": "Any reads longer than this limit will not be included in the analysis."
                },
                "threads": {
                    "type": "integer",
                    "default": 2,
                    "description": "Maximum number of CPU threads to use per workflow task.",
                    "help_text": "Several tasks in this workflow benefit from using multiple CPU threads. This option sets the number of CPU threads for all such processes. The total CPU resource used by the workflow is constrained by the executor configuration. See server threads parameter for kraken specific threads."
                },
                "server_threads": {
                    "type": "integer",
                    "default": 2,
                    "description": "Number of CPU threads used by the kraken2 server for classifying reads.",
                    "help_text": "For the real-time kraken2 workflow, this is the number of CPU threads used by the kraken2 server for classifying reads."
                },
                "kraken_clients": {
                    "type": "integer",
                    "default": 2,
                    "description": "Number of clients that can connect at once to the kraken-server for classifying reads.",
                    "help_text": "For the real-time kraken2 workflow, this is the number of clients sending reads to the server. It should not be set to more than 4 fewer than the executor CPU limit."
                }
            }
        },
        "miscellaneous_options": {
            "title": "Miscellaneous Options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Everything else.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "disable_ping": {
                    "type": "boolean",
                    "description": "Enable to prevent sending a workflow ping.",
                    "hidden": true
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "aws_image_prefix": {
                    "type": "string",
                    "description": "aws image prefix.",
                    "hidden": true
                },
                "aws_queue": {
                    "type": "string",
                    "description": "aws queue.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_options"
        },
        {
            "$ref": "#/definitions/real_time_analysis_options"
        },
        {
            "$ref": "#/definitions/sample_options"
        },
        {
            "$ref": "#/definitions/reference_options"
        },
        {
            "$ref": "#/definitions/kraken2_options"
        },
        {
            "$ref": "#/definitions/minimap2_based_options"
        },
        {
            "$ref": "#/definitions/output_options"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/miscellaneous_options"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "wf-template"
        }
    },
    "docs": {
        "intro": "\n## Introduction\n\nwf-metagenomics offers two different approaches to assigning sequence reads to a species:\n\n### Kraken2 - Default\n\n[Kraken2](https://github.com/DerrickWood/kraken2) is used with the [Kraken2-server](https://github.com/epi2me-labs/kraken2-server) to offer the fastest method for classification of reads. [Bracken](https://github.com/jenniferlu717/Bracken) is then used to give a good estimate of species level abundance in the sample which can be visualised in the report. The Kraken2 workflow mode can be run in real time. See quickstart below for more details.\n\n### Minimap2 \n\n[Minimap2](https://github.com/lh3/minimap2) provides the finest resolution analysis but, depending on the reference database used, at the expense of significantly more compute time. Currently the minimap2 mode does not support real-time.\n\nThe wf-metagenomics workflow by default uses the NCBI 16S + 18S rRNA database that will be downloaded at the start of an analysis, there are expanded metagenomic database options available with the --source parameter but the workflow is not tied to this database and can also be used with custom databases as required.\n\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)"
    }
}